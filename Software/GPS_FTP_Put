#!/bin/tcsh  
set path = ($path /opt/bin /usr/local/sbin /usr/sbin /sbin /usr/local/bin /usr/bin /bin /usr/X11R6/bin /opt/www/htdig/bin /opt/kde/bin /usr/lib/qt-3.0.4/bin /usr/share/texmf/bin /home/frednet/bin/DumpGPS .)
set JOB=`basename $0`
set CONFIG_FILE="$HOME/.netrc"
set USAGE = `echo "USAGE:"`
set USAGE = "$USAGE""\n""`basename $0` -m [machine] | -u [user] | -p [password] | -rd [remote dir path] | -f [filenames (within pathname)]"
set ErrorUsage = ""

if(! $#) then
	echo "$USAGE"
	exit 1
endif

set ReadFiles = "No"

while($#)
	switch($1)
		case "-m":
			shift
			set REMOTE_MACHINE = $1
			set PING_RESPONSE = `ping -c 1 $REMOTE_MACHINE`
			set PING_RESPONSE = `echo $PING_RESPONSE | gawk ' $0 ~/0%/ {print "Ready"}'`
			if ("$PING_RESPONSE" == "Ready") then
				set ReadFiles = "No"
			else
			   set ErrorUsage = "$ErrorUsage""Error -> $REMOTE_MACHINE isn't a correct machine name or the link isn't up.\c"
			   exit
			endif
			breaksw
		case "-u":
			shift
			set REMOTE_USER = $1
			set ReadFiles = "No"
			breaksw
		case "-p":
		     shift
			 set REMOTE_PASSWORD = "$1"
			 set ReadFiles = "No"
			 breaksw			
		case "-rd":
		     shift
			 set REMOTE_DIR = "$1"
			 if (`echo $1 | gawk '$1 != "-m" &&  $1 != "-u" && $1 != "-p" && $1 != "-f" && $1 != "-u" && $1 != "-rd" && $1 != "" {print $1}'` != "") then
			 set ReadFiles = "No"
			 else
			    set ErrorUsage = "$ErrorUsage""Error -> line options are not good.\c"				
			 endif
			 breaksw			
		case "-f":
		     shift
			 set FILES = "$1"
			 set ReadFiles = "Yes"
			 breaksw			
		default:		     
		     if ("$ReadFiles" == "Yes") then
			    set FILES = "$FILES $1"
			 else
			    set ErrorUsage = "$ErrorUsage""Error -> line options are not good.\c"
			 endif
	         breaksw	
	endsw
	shift
end


if ("$ErrorUsage" != "") then
   echo "$ErrorUsage"
   echo ""
   exit
endif

set FtpFileList=""
foreach FILE ($FILES)
   set FtpFileList = "$FtpFileList `basename $FILE`"
   set FtpDir = `dirname $FILE`
end

echo "Source dir for files to upload: $FtpDir"
echo "Files to upload: $FtpFileList"

# gestisce la presenza di un file .netrc gia esistente e prepara un nuovo file
# .netrc con le configurazioni passate dalla linea di comando. Inoltre e presente
# la sessione ftp
if (-e $CONFIG_FILE) then
   mv $CONFIG_FILE $CONFIG_FILE.ori
   #ls -l $CONFIG_FILE.ori
else
endif

echo machine $REMOTE_MACHINE > $CONFIG_FILE
echo login $REMOTE_USER >> $CONFIG_FILE
echo password $REMOTE_PASSWORD >> $CONFIG_FILE
chmod go-rwx $CONFIG_FILE

# sessione ftp
ftp -vip <<**
open $REMOTE_MACHINE
bin
lcd $FtpDir
cd $REMOTE_DIR
mput $FtpFileList
bye
**

echo $REMOTE_DIR

ftp -vip <<**
open $REMOTE_MACHINE
bin
lcd $FtpDir
cd $REMOTE_DIR
mput $FtpFileList
bye
**


#cat $CONFIG_FILE
if (-e $CONFIG_FILE.ori) then
   mv $CONFIG_FILE.ori $CONFIG_FILE
else
   rm $CONFIG_FILE
endif
